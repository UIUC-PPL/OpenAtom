================================================================================
		    OpenAtom Massively Parallel Code v1.5a
================================================================================

INSTALLATION

1. To compile OpenAtom, you need to specify the following things:
    i.   Charm++ Installation Path
    ii.  FFTW-2 and FFTW-3 Library Path
    iii. Optimized Math Libraries
    iv.  Charm-FFT Library

2. First, copy a machine specific configuration file (config.MACHINE.mk) from
   the makefiles/ directory to the OpenAtom base directory and rename it to
   config.mk.

   Linux Workstations	config.mk
   Blue Gene/Q		config.mk.bgq
   Cray XE6/XK7/XC30	config.mk.xk6

   Use config.mk for systems that do not belong to any of the above options.
  
3. To install Charm++, download a copy from http://charm.cs.illinois.edu
   Depending on the architecture of the machine, choose the right build options
   and build Charm++. If you have trouble building Charm++, e-mail:
   charm@cs.illinois.edu

   Next, edit the CHARMBASE variable in config.mk to point to the Charm++
   installation.

4. OpenAtom requires double precision FFTW-2 and FFTW-3 installed in some location.
   
   Edit the FFT2_HOME and FFT3_HOME variables in config.mk to point to the FFTW
   installations. You might also need to edit the DUAL_FFTW variable depending
   on how FFTW was compiled. It takes two values: DUAL_FFTW_OFF and DUAL_FFTW

5. You will also need to compile Charm-FFT library separately before compiling
   OpenAtom. This library can be obtained using the following command:

   git clone https://charm.cs.illinois.edu/gerrit/libs/fft

   Follow the instructions in the downloaded code to compile it. Set the
   variable CHARMFFT_HOME to the directory with compiled version of Charm-FFT.

6. To start the build, simply type make in the top-level directory along with
   any other options that you require. The binary 'OpenAtom' is placed in the
   build directory whose name is indicated at the start and end of the build
   process.


OPTIONAL CONFIGURATION

1. Check to make sure the optimization options are the ones that you desire.
   These are set as the value of the variable OPT in the config.mk file. These
   flags are also suffixed to the name of the build directory giving you a
   separate directory for each different set of flags.

2. Be sure to type 'make help' to review the different options you have when
   invoking the build. For e.g., parallel builds can be much faster if your
   machine supports it.


TEST YOUR BUILD

make test should run a minimal set of regression tests and report failures. To
use it, you will have to obtain the water (32 molecules, 10Ry cutoff) dataset
from our git repositories.

  Anonymous access:
  git clone http://charm.cs.illinois.edu/gerrit/datasets/openatom/water_32M_10Ry.git

Place the dataset in the data/ directory of the openatom tree. Alternatively,
you can place this anywhere and modify the 'w3210' variable in your make config
file (config.mk) to point to the location.

Note:
  - This test setup is still quite nascent and in development. 
  - It currently directly invokes the OpenAtom binary for simple sequential
    runs. If your machine has a job queue or a headnode, this may not be
    desirable or possible.
  - The setup still is not ready to be used in any environment where job
    submission is required.

