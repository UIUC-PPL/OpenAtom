// A module defining the various messages that are shared between modules
module messages {
  // A message used to package and send around psi arrays
  message PsiMessage {
    complex psi[];
  };

  // A message containing data being moved during a transpose
  message TransposeMessage {
    complex data[];
  };

  message Phase2Message {
    complex data[];
  };

  message Phase3Message {
    complex data[];
  };

  message Phase4Message {
    complex data[];
  };
};

module states {
  readonly CProxy_States states_proxy;

  // An array containing all of the states in the system. After reading in the
  // states and performing an initial FFT it waits for the controller to tell it
  // where and when to send its data.
  array [3D] States {
    entry States();
    entry void fftGtoR();
    entry [reductiontarget] void sendToCache();
    entry [reductiontarget] void sendToComputeF();
  };  
};
