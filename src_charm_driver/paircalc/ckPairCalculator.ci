/** \file ckPairCalculator.ci
 *
 */

module ckPairCalculator {
	readonly ComlibInstanceHandle mcastInstanceCP;

	initproc registersumMatrixDouble(void);	

	message initResultMsg;

	message initGRedMsg;

	message sendBWsignalMsg;

	message partialResultMsg  {
	  complex result[];
	};

	message priorSumMsg  {
	  complex result[];
	};

	message mySendMsg  {
	  complex data[];
	};

	message calculatePairsMsg  {
	  complex points[];
	};

	message multiplyResultMsg  {
	  double matrix1[];
	  double matrix2[];
	};

	message entireResultMsg  {
	  double matrix[];
	};

	message entireResultMsg2  {
	  double matrix1[];
	  double matrix2[];
	};


	array [4D] PairCalculator {

 		entry PairCalculator(bool, int, int, int, CkCallback cb, CkArrayID final_callbackid, int final_callback_ep, int callback_ep_tol, bool conserveMemory, bool lbpaircalc,  redtypes cpreduce, int orthoGrainSize, bool collectTiles, bool streambw, bool delaybw, int streamFW );
   		entry void lbsync();
		entry void sendBWResult(sendBWsignalMsg *msg);
		entry [nokeep] void initGRed(initGRedMsg *msg);
		entry [nokeep] void initResultSection(initResultMsg *msg);
   		entry [nokeep] void acceptPairData(calculatePairsMsg *msg);
		entry [nokeep] void multiplyResult(multiplyResultMsg *msg);
		entry [nokeep,inline] void multiplyResultI(multiplyResultMsg *msg);

	};
}
